name: CI

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: cat Dockerfile
        run: cat Dockerfile
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: musyu/gitops-demo-app:actions-${{ github.sha }}
          cache-from: type=registry,ref=musyu/gitops-demo-app:latest
          cache-to: type=inline
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout manifest repo
        uses: actions/checkout@v2
        with:
          repository: forcia/gitops-demo-manifest
          token: ${{ secrets.MY_PAT }} # `GitHub_PAT` is a secret that contains your PAT
      - name: Update image tag
        env:
          CD_MANIFEST_FILE: Chart.yaml
        run: |
          docker run --rm -v ${PWD}:/workdir mikefarah/yq \
          yq write --inplace --verbose ${{ env.CD_MANIFEST_FILE }} appVersion actions-${{ github.sha }}
          cat ${{env.CD_MANIFEST_FILE}}
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.MY_PAT }}
          branch: update-image-tag-actions-${{ github.sha }}
          commit-message: Update image tag
          committer: GitHub Actions <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          delete-branch: true
          title: Update image tag actions-${{ github.sha }}
          body: |
            Update image tag
            - Updated with build image tag
            - Auto-generated by [create-pull-request][1]
            [1]: https://github.com/peter-evans/create-pull-request
          labels: |
            automated pr
          draft: false
      - name: Check outputs
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
  slack-notify:
    if: always()
    needs: deploy
    name: workflow notification to slack
    runs-on: ubuntu-latest
    steps:
      - uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
